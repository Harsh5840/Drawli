version: '3.8'

services:
  http-backend:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}/http-backend:${IMAGE_TAG}
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${PROD_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=4000
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  ws-backend:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}/ws-backend:${IMAGE_TAG}
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${PROD_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=6060
      - HTTP_BACKEND_URL=http://http-backend:4000
    ports:
      - "6060:6060"
    depends_on:
      - http-backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:6060/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  drawli-front:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}/drawli-front:${IMAGE_TAG}
    restart: always
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
    ports:
      - "3000:3000"
    depends_on:
      - http-backend
      - ws-backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - drawli-front
      - http-backend
      - ws-backend

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
